version: 2.1
jobs:
  build:
    docker:
    - image: circleci/ruby:2.7.0-node-browsers
      environment:
        - BUNDLER_VERSION: 2.1.4
        - RAILS_ENV: 'test'
    - image: circleci/mysql:5.7.28
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: true
        - MYSQL_ROOT_HOST: '127.0.0.1'
    working_directory: ~/golcommu
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-
    - run:
        name: install dependencies
        command: |
          gem install bundler -v 2.1.4
          bundle install --jobs=4 --retry=3 --path vendor/bundle
    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

    # Database setup
    - run:
        name: Databasesetup
        command: |
          bundle exec rails db:create
          bundle exec rails db:migrate

    # run tests!
    - run:
        name: Run rspec
        command: |
          mkdir /tmp/test-results
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results

    - add_ssh_keys:
          fingerprints:
            - "9a:58:8f:9e:84:fe:a8:de:ef:94:09:52:57:cf:a3:50"

    - deploy:
        name: Capistrano deploy
        command: |
          if [ "${CIRCLE_BRANCH}" != "master" ]; then
            exit 0
          fi
          bundle exec cap production deploy